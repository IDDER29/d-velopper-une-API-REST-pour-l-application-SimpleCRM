generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model client {
  id_client                 String    @id @unique(map: "id_client") @default(uuid())
  first_name_client         String
  last_name_client          String
  address_line1_client      String
  address_line2_client      String?
  postal_code_client_client String
  city_client               String
  phone_number_client       String
  email_client              String    @unique(map: "email_client")
  company_id_client         String
  company_client            company?  @relation(fields: [company_id_client], references: [id_company], onDelete: NoAction, onUpdate: NoAction, map: "client_ibfk_1")
  invoice_client            invoice[]

  @@index([company_id_client], map: "company_id_client")
}

model company {
  id_company                  String     @id @default(uuid())
  name_company                String
  address_line1_company       String
  address_line2_company       String?
  postal_code_company         String
  city_company                String
  creation_date_company       DateTime   @default(now())
  tax_identifier_company      String?
  capital_company             Float
  number_of_employees_company Int
  responsible_name_company    String
  phone_number_company        String
  email_company               String     @unique(map: "email_company")
  client_company              client[]
  invoice_company             invoice[]
  product_company             product[]
  supplier_company            supplier[]
}

model invoice {
  id_invoice           String         @id @default(uuid())
  created_at_invoice   DateTime       @default(now())
  due_date_invoice     DateTime       @default(now())
  amount_invoice       Float
  company_id_invoice   String
  client_id_invoice    String
  company_invoice      company        @relation(fields: [company_id_invoice], references: [id_company], onDelete: NoAction, onUpdate: NoAction, map: "invoice_ibfk_1")
  client_invoice       client         @relation(fields: [client_id_invoice], references: [id_client], onDelete: NoAction, onUpdate: NoAction, map: "invoice_ibfk_2")
  invoice_item_invoice invoice_item[]

  @@index([client_id_invoice], map: "client_id_invoice")
  @@index([company_id_invoice], map: "company_id_invoice")
}

model invoice_item {
  id_invoice_item         String  @id @default(uuid())
  invoice_id_invoice_item String
  product_id_invoice_item String
  invoice_item_invoice    invoice @relation(fields: [invoice_id_invoice_item], references: [id_invoice], onDelete: NoAction, onUpdate: NoAction, map: "invoice_item_ibfk_1")
  product_item_invoice    product @relation(fields: [product_id_invoice_item], references: [id_product], onDelete: NoAction, onUpdate: NoAction, map: "invoice_item_ibfk_2")

  @@index([invoice_id_invoice_item], map: "invoice_id_invoice_item")
  @@index([product_id_invoice_item], map: "product_id_invoice_item")
}

model product {
  id_product             String         @id @default(uuid())
  name_product           String         @unique
  purchase_price_product Float
  sale_price_product     Float
  company_id_product     String
  supplier_id_product    String
  invoice_item_product   invoice_item[]
  company_product        company?       @relation(fields: [company_id_product], references: [id_company], onDelete: NoAction, onUpdate: NoAction, map: "product_ibfk_1")
  supplier_product       supplier?      @relation(fields: [supplier_id_product], references: [id_supplier], onDelete: NoAction, onUpdate: NoAction, map: "product_ibfk_2")

  @@index([company_id_product], map: "company_id_product")
  @@index([supplier_id_product], map: "supplier_id_product")
}

model supplier {
  id_supplier                String    @id @default(uuid())
  supplier_fullNmae_supplier String
  address_line1_supplier     String
  address_line2_supplier     String?
  postal_code_supplier       String
  city_supplier              String
  phone_number_supplier      String
  email_supplier             String    @unique
  company_id_supplier        String?
  product_supplier           product[]
  company_supplier           company?  @relation(fields: [company_id_supplier], references: [id_company], onDelete: NoAction, onUpdate: NoAction, map: "supplier_ibfk_1")

  @@index([company_id_supplier], map: "company_id_supplier")
}
